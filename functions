echo "Sourcing .functions file -- ~/.functions"

f.config.dropbox () {
  if [ $(ip link show |grep -c "state UP") -eq 0 ]; then
    echo "Error (.function file):  Dropbox function cannot start"
    echo "No network detected"
    return
  fi

  echo "Running Dropbox function" >> $LOG
  DROPBOX_HOME="$HOME/.dropbox"
  if [ -d $DROPBOX_HOME ]; then
    echo "---$DROPBOX_HOME exists" >> $LOG
    if [ $(ps -ef |grep -c [d]ropbox) -eq 0 ]; then
      echo "---There is no current dropbox function running" >> $LOG
      echo "---Starting Dropbox" >> $LOG
      dropbox start
    else
      echo "---There is already a Dropbox process running" >> $LOG
    fi
  else
    echo "---$DROPBOX_HOME does not exist.  Ending dropbox function" >> $LOG
  fi
}

f.config.java () {
  if [ -d /opt/java ]; then
    echo " Java installation found at /opt/java.  Adding Java to PATH" >> $LOG
    export JAVAHOME="/opt/java"
    export PATH=$PATH:/opt/java/bin:
  fi

}

f.set.git() {
  GITHOME="$HOME/Git"
  if [ -z $1 ]; then
    echo "Usage:  f.set.git PROJECTNAME"
    echo "Current Projects:"
    ls -1 $GITHOME/*.git
    return
  fi

  PS1=$'\1\r\1\e[7m\1{$(hostname -s)}\1\e[0m\1 '":\$PWD 
git > "

  . $GITHOME/$1.git
  cd $GITHOME

  alias g.=hub
  alias g.commit="hub commit -m"
  alias g.add="hub add -A"
  alias g.checkout="hub checkout"
  alias g.branch="hub branch"
  
}

f.set.default() {
  PS1=$'\1\r\1\e[7m\1{$(hostname -s)}\1\e[0m\1 '":\$PWD 
> "
  cd

}

f.set.R() {
  RENV="$HOME/.R.env"
  if [ -f $RENV ]; then
    . $RENV
    WORKDIR="$LAST_R_DIR"

    COMPLETED=0
    while [ $COMPLETED == 0 ]; do
      echo "The last working directory for R was:  $LAST_R_DIR"
      echo "Use this directory again?  (y/n)"
      read ANSWER

      case $ANSWER in
        y | Y )
          echo "Working directory remains $WORKDIR"
          COMPLETED=1
        ;;
        n | N )
          echo "Enter path to working directory.  Use double quotes if necessary."
          read WORKDIR
          echo "LAST_R_DIR=\"$WORKDIR\"" > $RENV
          COMPLETED=1
        ;;
        * )
        ;;
      esac
    done
  fi

#  cd $(echo $WORKDIR |sed 's/ /\ /g')
  cd "$WORKDIR"
  R
}


f.ssh_tunnel() {
  ssh -D 1080 -f -C -q -N home.remote
}
